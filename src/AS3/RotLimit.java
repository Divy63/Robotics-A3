package AS3;

import java.io.Serializable;
import java.util.Objects;

/**
 * autogenerated 1.8 compatible class from record def
 */
public final class RotLimit  implements Serializable {
    private final double minRad;
    private final double maxRad;

    public RotLimit(double minRad, double maxRad) {
        this.minRad = minRad;
        this.maxRad = maxRad;
    }

    public static RotLimit of(double minRad, double maxRad) {
        return new RotLimit(minRad, maxRad);
    }

    public double minRad() {
        return minRad;
    }

    public double maxRad() {
        return maxRad;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == this) return true;
        if (obj == null || obj.getClass() != this.getClass()) return false;
        RotLimit that = (RotLimit) obj;
        return Double.doubleToLongBits(this.minRad) == Double.doubleToLongBits(that.minRad) &&
                Double.doubleToLongBits(this.maxRad) == Double.doubleToLongBits(that.maxRad);
    }

    @Override
    public int hashCode() {
        return Objects.hash(minRad, maxRad);
    }

    @Override
    public String toString() {
        return "RotLimit[" +
                "minRad=" + minRad + ", " +
                "maxRad=" + maxRad + ']';
    }

}
